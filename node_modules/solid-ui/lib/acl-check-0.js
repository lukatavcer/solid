'use strict';

// Access control logic

var ACL = $rdf.Namespace('http://www.w3.org/ns/auth/acl#');

module.exports = {};

function aclCheck(kb, doc, directory, aclDoc, agent, modesRequired, origin, trustedOrigins) {
  var auths = kb.each(null, ACL('accessTo'), doc);
  if (directory) {
    auths = auths.concat(null, (ACL('defaultForNew'), doc)); // Deprecated but keep for ages
    auths = auths.concat(null, (ACL('default'), doc));
  }
  if (origin && trustedOrigins && trustedOrigins.includes(origin)) {
    console.log('Origin ' + origin + ' is trusted');
    origin = null; // stop worrying about origin
  }
  modesRequired.forEach(function (mode) {
    var agentGood = false;
    var originGood = !origin;
    auths.forEach(function (auth) {
      if (kb.holds(auth, ACL('agent'), agent) && kb.holds(auth, ACL('mode'), mode)) {
        agentGood = true;
      }
      if (origin && kb.holds(auth, ACL('origin'), origin) && kb.holds(auth, ACL('mode'), mode)) {
        originGood = true;
      }
    }); // next auth
    if (!agentGood) console.log('ACL fail: agent ' + agent + ' cant ' + mode + ' resource ' + doc);
    if (!originGood) console.log('ACL fail: origin ' + origin + ' cant ' + mode + ' resource ' + doc);
    if (!agentGood || !originGood) {
      return false;
    }
  });
  return true;
}

module.exports.aclCheck = aclCheck;